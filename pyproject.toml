[build-system]
requires = ["poetry-core>=1.0.0,<2.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "imap-quicklook"
version = "0.1.0"
description = "Quicklook generation code for IMAP mission and instruments."
authors = ["Ana Manica <ana@manica.org>"]
readme = "README.md"

[tool.poetry.dependencies]
cdflib = "^1.3.1"
imap-data-access = ">=0.31.0"
python = ">=3.10,<4"
xarray = '>=2024.10.0'
numpy = "<=3"

# Optional dependencies
numpydoc = {version="^1.5.0", optional=true}
pandas = {version=">=2.0.0", optional=true}
pre-commit = {version="^3.3.3", optional=true}
pytest = {version=">=6.2.5", optional=true}
pytest-cov = {version="^4.0.0", optional=true}
pytest-xdist = {version="^3.2", optional=true}
ruff = {version="==0.2.1", optional=true}
mypy = {version="1.10.1", optional=true}
netcdf4 = {version ="^1.7.2",  optional = true}

[tool.numpydoc_validation]
checks = ["all", #report on all checks, except the following
    "EX01", # Ignore No examples section found
    "SA01", # Ignore See Also section not found
    "ES01", # Ignore No extended summary found
    "RT02" ] # Ignore The first line of the Returns section
exclude = ['__init__' ] # don't report on objects that match any of these regex
override_SS05 = [  # override SS05 to allow docstrings starting with these words
    '^Process ',
]

[tool.mypy]
disable_error_code = ['import-not-found', # Unable to locate module or package specified
                'import-untyped', # The import lacks type information
                'no-untyped-call', # Function calls are only made to functions that are fully typed
                'type-arg', # Requires type arguments to be specified in list[] and dict[]
                'union-attr', # Item "float" of "float | Any" has no attribute "reshape"
                'no-any-return', # Returning Any from a function
              ]
strict = true
explicit_package_bases = true
follow_imports = 'skip' #may want to remove
exclude = ["tests"]
packages = ["imap_quicklooks"]
plugins = 'numpy.typing.mypy_plugin'